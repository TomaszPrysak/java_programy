package programowanie_obiektowe;


public class Auto {

	// Deklarujemy zmienne (pola) naszej klasy Auto
	protected int iloscDrzwi = 2; // podczas wywo³ania konstruktora domyœlnego i w nim bedzie przypisa wartoœæ dla zmiennej iloscDrzwi, dlatego jak stworzymy nowy obiekt i wywo³amy tego obiektu zmienna iloscDrzwi to bêdzie 2
	double cena; // stworzyliœmy obiekt gdzie poprzez konstruktor naurziclismy cenê 100 000 z³
	//double brutto;
	String kolorNadwozia, kolorFelg, kolorOpon, marka, model;
	
	// Metoda
	public double rabat(){
		cena = cena * 0.9;
		return cena;
	}
	
	// Metoda która zwraca jak¹œ wartoœæ
	public double brutto(){ // je¿eli wywo³ujemy t¹ metodê to nie przekazujemy jej wargumentu poniewa¿ w samej metodzie odwo³ujemy siê do zmiennej globalnej
		double brutto = cena * 1.23;
		return brutto; // metoda ta w wyniku dzia³ana zwraca wynik
	}
	
	/* Metoda je¿eli nie u¿ywamy zmiennych globalnych
	public double brutto(int cena){ // je¿eli wywo³ujemy t¹ metodê to przekazujemy jej argument
		this.brutto = cena * 1.23;
		return brutto; // metoda ta w wyniku dzia³ana zwraca wynik
	}
	*/
	
	// Metoda która nie zwraca wartœci a tylko tekst
	public void bruttoNetto(){
		System.out.println("Do zap³aty: ");
		System.out.println("cena netto: " + cena);
		System.out.println("cena brutto: " + cena * 1.23);
	}
	
	/* Metoda je¿eli nie u¿ywamy zmiennych globalnych
	// Metoda która nie zwraca wartœci a tylko tekst
	public void bruttoNetto(int cena){
		System.out.println("Do zap³aty: ");
		System.out.println("cena netto: " + cena);
		System.out.println("cena brutto: " + cena * 1.23);
	}
	*/
	
	// Konstruktor domyslny
	public Auto(){}
	// Konstruktor z argumentami które podajemy
	public Auto(
			int iloscDrzwi, 
			String kolorNadwozia, 
			String kolorFelg, 
			String kolorOpon, 
			String marka, 
			String model,
			double cena){
		this.iloscDrzwi = iloscDrzwi;
		this.kolorNadwozia = kolorNadwozia;
		this.kolorFelg = kolorFelg;
		this.kolorOpon = kolorOpon;
		this.marka = marka;
		this.model = model;
		this.cena = cena; //
	}
	
	// Metoda g³ówna naszej klasy Auto w której wykonywany jest 
	public static void main(String[] args) {
		
		Auto kawasaki = new Auto(); // stworzenie obiektu z konstruktora domyœlnego, a wiemy to st¹d, bo w nawiasach nie podajemy argumentów, ale musimy w klasie mieæ dwa konstruktory i domyslny i z argumentami
		System.out.println(kawasaki.iloscDrzwi); // poniewa¿ utworzyliœmy obiekt z konstruktorem domyslym to nam wyœwietli iloœæ drzwi, bo taka wartoœæ jest zainicjowana w polach klasy
		System.out.println(kawasaki.kolorFelg); // z kolei nie mamy przypisanej w polach klasy niczego przypisanego do zmiennej kolorFelg to 
		
		// Tworzenie nowego obiektu naszej klasy Auto wraz z wywo³aniem konstruktora i wpisaniem od razu do niego wartoœci przypisanych do konkretnych zmiennych (pól) naszej klasy
		Auto garbus = new Auto(4, "niebieski", "czerwony", "czarne", "Volkswagen", "Garbus", 5000);
		
		Auto felicia = new Auto(5, "granatowy", "z³oty", "bia³e", "Skoda", "Felicia", 15000);
		Auto punto = new Auto(3, "bia³y", "czarne", "czarne", "Fiat", "Punto", 17500);
		Auto auris = new Auto(5, "srebrny", "srebrny", "czarne", "Toyota", "Auris", 25000);
		Auto piecset = new Auto(3, "czerwony", "¿ó³ty", "czarny", "Fiat", "500", 46000);
		Auto maluch = new Auto(3, "¿ó³ty", "niebieski", "czarny", "Fiat", "Maluch", 500);
		
		//poniewa¿ mamy konstruktor nie musimy przypisywac do ka¿dej zmiennej (pola) zdeklarowanego na poczatku naszej klasy, wpisanie to dokonujemy podczas tworzenia nowego obiektu
		/*
		// przypisanie w³aœciwoœci do poszczególnych pól naszej klasy je¿eli NIE mamy konstruktora!!!!
		// aby to zrobiæ musimy najpierw wpisac nazwê klasy a potem po kropce nazwêpola i nadaæ im wartoœæ
		garbus.iloscDrzwi = 4;
		garbus.kolorNadwozia = "Niebieski";
		garbus.kolorFelg = "Czerwony";
		garbus.kolorOpon = "Czarny";
		garbus.marka = "Volkswagen";
		garbus.model = "Garbus";
		*/
		
		// Wypisuje w princie pola naszej klasy
		System.out.println(garbus.iloscDrzwi);
		System.out.println(garbus.kolorNadwozia);
		System.out.println(garbus.kolorFelg);
		System.out.println(garbus.kolorOpon);
		System.out.println(garbus.marka);
		System.out.println(garbus.model);
		System.out.println(garbus.cena);
		
	}

}
