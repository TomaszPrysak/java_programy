package app.controller;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import app.database.DBConnector;
import app.model.DataBaseModel;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.GridPane;

public class DataBaseController {
	
    @FXML
    private TableView<DataBaseModel> TableTwo;

    @FXML
    private TableColumn<DataBaseModel, Integer> col_id;

    @FXML
    private TableColumn<DataBaseModel, String> col_name;

    @FXML
    private TableColumn<DataBaseModel, String> col_last;

    @FXML
    private TableColumn<DataBaseModel, Double> col_salary;
	
    @FXML
    private Button select;

    @FXML
    private Button delete;

    @FXML
    private Button update;

    @FXML
    private Button insert;
    
    @FXML
    private Label lb_name;

    @FXML
    private Label lb_last;

    @FXML
    private Label lb_salary;

    @FXML
    private GridPane grid_panel;
    
    @FXML
    private TextField tf_name;

    @FXML
    private TextField tf_last;

    @FXML
    private TextField tf_salary;

    @FXML
    private Button btn_update;

    @FXML
    private Button btn_insert;
    
    public DBConnector db;
    public ObservableList<DataBaseModel> data;

    @FXML
    void btnDeleteAction(ActionEvent event) throws ClassNotFoundException, SQLException {
    	
    	Connection conn = db.Connection();
    	
    	try{
	    	int id_del = TableTwo.getSelectionModel().getSelectedItem().getId();
	    	String sql = "delete from employee where id = " + id_del + ";";
	    	PreparedStatement ps = conn.prepareStatement(sql);
	    	ps.executeUpdate();  	
	    	btnSelectAction(event);
    	}catch(NullPointerException e){
    		Alert a = new Alert(AlertType.WARNING);
    		a.setContentText("Nie wybra³eœ ¿adnego rekordu do usuniêcia");
    		a.setTitle("B³¹d");
    		a.setHeaderText("UWAGA!");
    		a.showAndWait();
    	}
    }

    @FXML
    void btnInsertAction(ActionEvent event) throws SQLException, ClassNotFoundException {
   
    	grid_panel.setDisable(false);
    	btn_insert.setDisable(false);
    	
    }

    @FXML
    void btnInsertCommitAction(ActionEvent event) throws ClassNotFoundException, SQLException {
    	
    	Connection conn = db.Connection();
    	
    	if(tf_name.getText().equals(null) || tf_last.getText().equals(null) || tf_salary.getText().equals(null)){
    		Alert a = new Alert(AlertType.WARNING);
    		a.setContentText("Musisz wpisaæ dane osoby która chcesz dodaæ do bazy danych");
    		a.setTitle("B³¹d");
    		a.setHeaderText("UWAGA!");
    		a.showAndWait();
    	}else{
	    	String sql = "insert into employee (name, last, salary) values('" + tf_name.getText() + "', '" + tf_last.getText() + "', " + tf_salary.getText() + ");";
	    	PreparedStatement ps = conn.prepareStatement(sql);
	    	ps.executeUpdate();  	
	    	btnSelectAction(event);
    	}
    	
    }

    @FXML
    void btnSelectAction(ActionEvent event) throws ClassNotFoundException, SQLException {
    	
    	Connection conn = db.Connection();
    	data = FXCollections.observableArrayList();
    	
    	ResultSet rs = conn.createStatement().executeQuery("select * from employee;");
    	
    	while(rs.next()){
    		data.add(new DataBaseModel(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getDouble(4)));
    	}
    	
    	col_id.setCellValueFactory(new PropertyValueFactory<DataBaseModel, Integer>("id"));
    	col_name.setCellValueFactory(new PropertyValueFactory<DataBaseModel, String>("name"));
    	col_last.setCellValueFactory(new PropertyValueFactory<DataBaseModel, String>("last"));
    	col_salary.setCellValueFactory(new PropertyValueFactory<DataBaseModel, Double>("salary"));
    	
    	TableTwo.setItems(null);
    	TableTwo.setItems(data);
    	
    }

    @FXML
    void btnUpdateAction(ActionEvent event) {

    }

    @FXML
    void btnUpdateCommitAction(ActionEvent event) {

    }

    @FXML
    void initialize(){
    	db = new DBConnector();
    }
    
}
