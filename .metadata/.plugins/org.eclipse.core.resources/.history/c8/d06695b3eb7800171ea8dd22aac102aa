package java_dzien_drugi;

import java.math.BigInteger;

public class Wielkie_liczby {

	public static void main(String[] args) {
		
		// UWAGA!!! nale¿y pamiêtaæ, ¿e na wielkich liczbach nie stosujemy zwyk³ych operacji matematycznych jak plus(+), minus(-) itd tylko specjalne polecenia które odpowiadaj¹ arytmetycznym operacj¹
		
		long x = 25615612151111665l; // UWAGA! pamiêtaæ, ¿e przy niektórych typach zmiennych musimy dodawaæ na koñcu liczby pierwsz¹ literkê od nazwy typu zmiennej
		long y = 25615612151111665l;
		
		BigInteger bigIntX = BigInteger.valueOf(x); // jest to metoda statyczna która konwertuje nasz¹ liczbê typu long na liczbê Wielk¹ po to aby pózniej mozna bylo robic jakies opercje na wielkich liczbach
		System.out.println(bigIntX.toString());
		
		BigInteger bigIntY = BigInteger.valueOf(y); // tak jak powy¿sza liczba bigIntX ta te¿ powsta³a poprzez konwersjê liczby typu long na Wielk¹
		System.out.println(bigIntY.toString());
		
		BigInteger bigbigInt = new BigInteger("1651115154155455415189971616"); // tutaj tworzymy du¿¹ liczbê od razu nie poprzez konwersjê. Przydatne je¿eli od razu wiemy ze liczba bêdzie Big a nie tylko wynik jej dodawania
		
		
		BigInteger bigIntZ = bigIntY.add(bigIntX); // na liczbach typu Big prowadzimy operacjê poprzez tak¹ konstukcjê jak pokazan¹ tzn. zmiennaX.add(zmiannaY)
		System.out.println(bigIntZ);
		
		 

	}

}
